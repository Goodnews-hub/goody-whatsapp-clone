{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","displayName","InsertEmoticon","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03c590d1.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD89fmyT1kRzBssi8wycHSzm1Terb9hqgc\",\r\n    authDomain: \"goody-whatsapp-clone.firebaseapp.com\",\r\n    projectId: \"goody-whatsapp-clone\",\r\n    storageBucket: \"goody-whatsapp-clone.appspot.com\",\r\n    messagingSenderId: \"674351986648\",\r\n    appId: \"1:674351986648:web:637acddbc30b95f87aa4ad\",\r\n    measurementId: \"G-7B3M7CT3W4\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp\r\n  (firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { auth, provider };\r\n  export default db;","import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './SidebarChat.css';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport db from './firebase';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n    const [seed, setSeed] = useState('');\r\n    const [messages, setMessages] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n       db.collection('rooms')\r\n       .doc(id)\r\n       .collection('messages')\r\n       .orderBy('timestamp', 'desc')\r\n       .onSnapshot((snapshot) => \r\n          setMessages(snapshot.docs.map((doc) => \r\n          doc.data()))\r\n       );\r\n    }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n       setSeed(Math.floor(Math.random() * 5000))\r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat room\");\r\n\r\n        if (roomName) {\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            });\r\n        }\r\n    };\r\n\r\n    return  !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n        <div className='sidebarChat'>\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n            <div className=\"sidebarChat__info\">\r\n              <h2>{name}</h2>\r\n              <p>{messages[0]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    ): (\r\n        <div onClick={createChat}\r\n        className=\"sidebarChat\">\r\n        <h2>Add new chat</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarChat;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer (reducer, initialState)}>\r\n    {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext (StateContext);","import React, { useEffect, useState } from 'react';\r\nimport \"./Sidebar.css\";\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue(); \r\n\r\n\r\n    useEffect(() => {\r\n      const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n                setRooms(\r\n                    snapshot.docs.map((doc) => ({\r\n                         id: doc.id,\r\n                         data: doc.data(),\r\n                     })) \r\n                    )\r\n            );\r\n\r\n            return () => {\r\n                unsubscribe();\r\n            };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n        <div className=\"sidebar__header\">\r\n             <Avatar src={user?.photoURL} />\r\n             <div className=\"sidebar__headerRight\">\r\n             <IconButton>\r\n               <DonutLargeIcon />\r\n               </IconButton>\r\n               <IconButton>\r\n               <ChatIcon />\r\n               </IconButton>\r\n               <IconButton>\r\n               <MoreVertIcon />\r\n               </IconButton>\r\n             </div>\r\n        </div>\r\n\r\n        <div className=\"sidebar__search\">\r\n        <div className=\"sidebar__searchContainer\">\r\n             <SearchOutlined />\r\n             <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n        </div>\r\n        </div>\r\n        <div className=\"sidebar__chats\">\r\n          <SidebarChat addNewChat />\r\n          {rooms.map(room => (\r\n              <SidebarChat key={room.id} id={room.id}\r\n              name={room.data.name} />\r\n          ))}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { Avatar, IconButton } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport \"./Chat.css\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { InsertEmoticon, Message, SearchOutlined } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat() {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]); \r\n    const [{ user }, dispatch] = useStateValue();\r\n    \r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId).\r\n            onSnapshot(snapshot => (\r\n                setRoomName(snapshot.data().name)\r\n            ));\r\n            db.collection(\"rooms\")\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n            .onSnapshot((snapshot) =>\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            );\r\n        }\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n      e.preventDefault();\r\n      console.log(\"you typed >>>\", input);\r\n\r\n    db.collection('rooms').doc(roomId).collection\r\n    ('messages').add({\r\n        message: input,\r\n        name: user.displayName,\r\n        timestamp: firebase.firestore\r\n        .FieldValue.serverTimestamp(),\r\n    })\r\n\r\n      setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n               <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n\r\n               <div className=\"chat__headerInfo\">\r\n                 <h3>{roomName}</h3>\r\n                 <p>\r\n                     last seen{\" \"}\r\n                     {new Date(\r\n                         messages[messages.length -1]?.\r\n                         timestamp?.toDate()).toUTCString()}\r\n                 </p>\r\n               </div>\r\n\r\n               <div className=\"chat__headerRight\">\r\n               <IconButton>\r\n               <DonutLargeIcon />\r\n               </IconButton>\r\n               <IconButton>\r\n               <ChatIcon />\r\n               </IconButton>\r\n               <IconButton>\r\n               <MoreVertIcon />\r\n               </IconButton>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"chat__body\">\r\n            {messages.map((message) => (\r\n                <p className={`chat__message ${\r\n                    message.name === user.displayName \r\n                    && 'chat__reciever'}`}>\r\n                <span className=\"chat__name\">{message.name}</span>\r\n                {message.message}\r\n                <span className=\"chat__timestamp\">\r\n                    {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                </span>\r\n                </p>\r\n            ))}\r\n               \r\n            </div>\r\n            <div className=\"chat__footer\">\r\n              <InsertEmoticon />\r\n               <form>\r\n                  <input value={input} onChange={(e) => setInput(e.target.value)}\r\n                   placeholder=\"Type a message\" type=\"text\" />\r\n                  <button onClick={sendMessage} type=\"submit\">\r\n                  Send a message\r\n                  </button>\r\n               </form>\r\n               <MicIcon/>\r\n            </div>\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Chat;\r\n","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n        return {\r\n            ...state,\r\n            user: action.user,\r\n        };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { auth, provider } from './firebase';\r\nimport \"./Login.css\";\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Login() {\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth\r\n        .signInWithPopup(provider)\r\n        .then((result) => {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            });\r\n        })\r\n        .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n           <div className=\"login__container\">\r\n           <img \r\n              src=\"https://www.google.com/imgres?imgurl=https%3A%2F%2Fimage.shutterstock.com%2Fimage-photo%2Fvalencia-spain-march-05-2017-260nw-593508881.jpg&imgrefurl=https%3A%2F%2Fwww.shutterstock.com%2Fsearch%2Fwhatsapp%2Bicon&tbnid=Es2-UFuN1QIjEM&vet=12ahUKEwjLp9mgkIvvAhWK8IUKHWSyD3MQMygEegUIARDYAQ..i&docid=H2h67vz97xJ3aM&w=319&h=280&q=whatsapp%20logo&ved=2ahUKEwjLp9mgkIvvAhWK8IUKHWSyD3MQMygEegUIARDYAQ\"\r\n              alt=\"\"\r\n            />\r\n            <div className=\"login__text\">\r\n            <h1>Sign in to WhatsApp</h1>  \r\n        </div>\r\n\r\n        <Button onClick={signIn}>\r\n           Sign In with Google\r\n        </Button>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from './Login';\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n    const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ):( \n        <div className=\"app__body\">\n        <Router>\n        <Sidebar />\n        <Switch>\n        <Route path=\"/rooms/:roomId\">\n        <Chat />\n        </Route>\n        <Route path=\"/\">\n        <Chat />\n        </Route>\n         </Switch>\n         </Router>\n        </div>\n       )}\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from \"./reportWebVitals\";\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <StateProvider initialState={initialState}\n  reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}